-module(kncache).

-define(CACHE_SRV, kncache_srv).

%% Cache Lifecycle
-export([make/1
        ,make/2
        ,make_caches/1
        ,flush/1
        ,destroy/1
        ]).

%% Cache Info
-export([list/0
        ,info/1
        ,size/1
        ,ttl/1
        ,ttl/2
        ,keys/1
        ]).

%% Cache Access
-export([put/3
        ,put/4
        ,get/2
        ,get/3
        ,exists/2
        ,touch/2
        ,peek/2
        ,remove/2
        ,delete/2
        ]).

%% Cache Transforms
-export([evict/2
        ,evict/3]).

%% Cache Transforms
-export([foreach/2
        ,map/2
        ,match/3
        ,filter/2
        ,count/2
        ,dump/1
        ]).

%%==========================================================================================
%%
%%  Cache Lifecycle
%%
%%==========================================================================================
%%------------------------------------------------------------------------------------------
%% Make cache with infinite TTL
%%------------------------------------------------------------------------------------------
make(Cache) ->
  gen_server:cast(?CACHE_SRV, {make, Cache, infinity}).

%%------------------------------------------------------------------------------------------
%% Make cache with TTL
%%------------------------------------------------------------------------------------------
make(Cache, TTL) ->
  gen_server:cast(?CACHE_SRV, {make, Cache, TTL}).

%%------------------------------------------------------------------------------------------
%% Make list of caches
%%------------------------------------------------------------------------------------------
make_caches(CacheList) ->
  gen_server:cast(?CACHE_SRV, {make_caches, CacheList}).

%%------------------------------------------------------------------------------------------
%% Flush cache entries
%%------------------------------------------------------------------------------------------
flush(Cache) ->
  gen_server:cast(?CACHE_SRV, {flush, Cache}).

%%------------------------------------------------------------------------------------------
%% Destroy cache
%%------------------------------------------------------------------------------------------
destroy(Cache) ->
  gen_server:cast(?CACHE_SRV, {destroy, Cache}).

%%==========================================================================================
%%
%% Cache Info
%%
%%==========================================================================================
%%------------------------------------------------------------------------------------------
%% List of current caches
%%------------------------------------------------------------------------------------------
list() ->
  gen_server:call(?CACHE_SRV, list).

%%------------------------------------------------------------------------------------------
%% Get cache information
%%------------------------------------------------------------------------------------------
info(Cache) ->
  gen_server:call(?CACHE_SRV, {info, Cache}).

%%------------------------------------------------------------------------------------------
%% Get number of cache entries
%%------------------------------------------------------------------------------------------
size(Cache) ->
  gen_server:call(?CACHE_SRV, {size, Cache}).

%%------------------------------------------------------------------------------------------
%% Get cache TTL (in seconds)
%%------------------------------------------------------------------------------------------
ttl(Cache) ->
  gen_server:call(?CACHE_SRV, {ttl, Cache}).

%%------------------------------------------------------------------------------------------
%% Set cache TTL (in seconds)
%%------------------------------------------------------------------------------------------
ttl(Cache, TTL) ->
  gen_server:cast(?CACHE_SRV, {ttl, Cache, TTL}).

%%------------------------------------------------------------------------------------------
%% Get list of cache keys
%%------------------------------------------------------------------------------------------
keys(Cache) ->
  gen_server:call(?CACHE_SRV, {keys, Cache}).

%%==========================================================================================
%%
%% Cache Access
%%
%%==========================================================================================
%%------------------------------------------------------------------------------------------
%% Put Key/Value with default cache TTL
%%------------------------------------------------------------------------------------------
put(Key, Value, Cache) ->
  gen_server:cast(?CACHE_SRV, {put, Key, Value, Cache}).

%%------------------------------------------------------------------------------------------
%% Put Key/Value with TTL
%%------------------------------------------------------------------------------------------
put(Key, Value, TTL, Cache) ->
  gen_server:cast(?CACHE_SRV, {put, Key, Value, TTL, Cache}).

%%------------------------------------------------------------------------------------------
%% Get cache key value
%%------------------------------------------------------------------------------------------
get(Key, Cache) ->
  gen_server:call(?CACHE_SRV, {get, Key, Cache}).

%%------------------------------------------------------------------------------------------
%% Get cache value with cache miss function
%%------------------------------------------------------------------------------------------
get(Key, ValueFn, Cache) ->
  gen_server:call(?CACHE_SRV, {get, Key, ValueFn, Cache}).

%%------------------------------------------------------------------------------------------
%% Get cache key value and refresh TTL
%%------------------------------------------------------------------------------------------
touch(Key, Cache) ->
  gen_server:call(?CACHE_SRV, {touch, Key, Cache}).

%%------------------------------------------------------------------------------------------
%% Check if cache entry exists
%%------------------------------------------------------------------------------------------
exists(Key, Cache) ->
  gen_server:call(?CACHE_SRV, {exists, Key, Cache}).

%%------------------------------------------------------------------------------------------
%% Peek at cache entry
%%------------------------------------------------------------------------------------------
peek(Key, Cache) ->
  gen_server:call(?CACHE_SRV, {peek, Key, Cache}).

%%------------------------------------------------------------------------------------------
%% Remove cache entry and return value
%%------------------------------------------------------------------------------------------
remove(Key, Cache) ->
  gen_server:call(?CACHE_SRV, {remove, Key, Cache}).

%%------------------------------------------------------------------------------------------
%% Delete cache entry
%%------------------------------------------------------------------------------------------
delete(Key, Cache) ->
  gen_server:cast(?CACHE_SRV, {delete, Key, Cache}).

%%==========================================================================================
%%
%% Cache Evict Functions
%%
%%==========================================================================================
evict(set, EvictFn, Cache) ->
  gen_server:cast(?CACHE_SRV, {evict_set, EvictFn, Cache}).

evict(remove, Cache) ->
  gen_server:cast(?CACHE_SRV, {evict_remove, Cache}).

%%==========================================================================================
%%
%% Cache Transforms
%%
%%==========================================================================================
%%------------------------------------------------------------------------------------------
%% Perform function on each cache entry
%%------------------------------------------------------------------------------------------
foreach(KVFun, Cache) ->
  gen_server:cast(?CACHE_SRV, {foreach, KVFun, Cache}).

%%------------------------------------------------------------------------------------------
%% Return list of function run on each cache entry
%%------------------------------------------------------------------------------------------
map(KVFun, Cache) ->
  gen_server:call(?CACHE_SRV, {map, KVFun, Cache}).

%%------------------------------------------------------------------------------------------
%% Return list of Key / Value entries that match patterns
%%------------------------------------------------------------------------------------------
match(KeyPattern, ValuePattern, Cache) ->
  gen_server:call(?CACHE_SRV, {match, KeyPattern, ValuePattern, Cache}).

%%------------------------------------------------------------------------------------------
%% Return list of entries that KVFun returns true
%%------------------------------------------------------------------------------------------
filter(KVFun, Cache) ->
  gen_server:call(?CACHE_SRV, {filter, KVFun, Cache}).

%%------------------------------------------------------------------------------------------
%% Return count of entries that KVFun returns true
%%------------------------------------------------------------------------------------------
count(KVFun, Cache) ->
  gen_server:call(?CACHE_SRV, {count, KVFun, Cache}).

%%------------------------------------------------------------------------------------------
%% Return list of all Key / Value entries
%%------------------------------------------------------------------------------------------
dump(Cache) ->
  gen_server:call(?CACHE_SRV, {dump, Cache}).
