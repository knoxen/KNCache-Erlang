%%==================================================================================================
%%==================================================================================================
-module(kncache).

-define(CACHE_SRV, kncache_srv).

-export([child_spec/1,
         start_link/1
        ]).

%% Cache Lifecycle
-export([make/1,
         make/2,
         make_caches/1,
         flush/1,
         destroy/1
        ]).

%% Cache Info
-export([list/0,
         info/1,
         info/2,
         size/1,
         ttl/1,
         ttl/2,
         keys/1
        ]).

%% Cache Access
-export([put/3,
         put/4,
         get/2,
         get/3,
         exists/2,
         touch/2,
         remove/2,
         delete/2
        ]).

%% Cache Eviction Functions
-export([evict_fn/2,
         evict_fn/3]).

%% Cache Transforms
-export([foreach/2,
         map/2,
         match/3,
         filter/2,
         count/2,
         dump/1
        ]).


child_spec(Caches) ->
  #{id => kncache_srv,
    start => {kncache_srv, start_link, Caches},
    type => worker,
    restart => permanent,
    shutdown => 5000,
    modules => [kncache_srv]
   }.

start_link(Caches) ->
  gen_server:start_link({local, ?CACHE_SRV}, ?MODULE, Caches, []).


%%==================================================================================================
%%
%%  Cache Lifecycle
%%
%%==================================================================================================
%%--------------------------------------------------------------------------------------------------
%% Make cache with infinite TTL
%%--------------------------------------------------------------------------------------------------
make(Cache) ->
  gen_server:cast(?CACHE_SRV, {make, Cache, infinity}).

%%--------------------------------------------------------------------------------------------------
%% Make cache with TTL
%%--------------------------------------------------------------------------------------------------
make(Cache, TTL) ->
  gen_server:cast(?CACHE_SRV, {make, Cache, TTL}).

%%--------------------------------------------------------------------------------------------------
%% Make list of caches
%%--------------------------------------------------------------------------------------------------
make_caches(CacheList) ->
  gen_server:cast(?CACHE_SRV, {make_caches, CacheList}).

%%--------------------------------------------------------------------------------------------------
%% Flush cache entries
%%--------------------------------------------------------------------------------------------------
flush(Cache) ->
  gen_server:cast(?CACHE_SRV, {flush, Cache}).

%%--------------------------------------------------------------------------------------------------
%% Destroy cache
%%--------------------------------------------------------------------------------------------------
destroy(Cache) ->
  gen_server:cast(?CACHE_SRV, {destroy, Cache}).

%%==================================================================================================
%%
%% Cache Info
%%
%%==================================================================================================
%%--------------------------------------------------------------------------------------------------
%% List of current caches
%%--------------------------------------------------------------------------------------------------
list() ->
  gen_server:call(?CACHE_SRV, list).

%%--------------------------------------------------------------------------------------------------
%% Get cache info
%%--------------------------------------------------------------------------------------------------
info(Cache) ->
  gen_server:call(?CACHE_SRV, {info, Cache}).

%%--------------------------------------------------------------------------------------------------
%% Get cache entry info
%%--------------------------------------------------------------------------------------------------
info(Cache, Key) ->
  gen_server:call(?CACHE_SRV, {info, Cache, Key}).

%%--------------------------------------------------------------------------------------------------
%% Get number of cache entries
%%--------------------------------------------------------------------------------------------------
size(Cache) ->
  gen_server:call(?CACHE_SRV, {size, Cache}).

%%--------------------------------------------------------------------------------------------------
%% Get cache TTL (in seconds)
%%--------------------------------------------------------------------------------------------------
ttl(Cache) ->
  gen_server:call(?CACHE_SRV, {ttl, Cache}).

%%--------------------------------------------------------------------------------------------------
%% Set cache TTL (in seconds)
%%--------------------------------------------------------------------------------------------------
ttl(Cache, TTL) ->
  gen_server:cast(?CACHE_SRV, {ttl, Cache, TTL}).

%%--------------------------------------------------------------------------------------------------
%% Get list of cache keys
%%--------------------------------------------------------------------------------------------------
keys(Cache) ->
  gen_server:call(?CACHE_SRV, {keys, Cache}).

%%==================================================================================================
%%
%% Cache Access
%%
%%==================================================================================================
%%--------------------------------------------------------------------------------------------------
%% Put Key/Value with default cache TTL
%%--------------------------------------------------------------------------------------------------
put(Cache, Key, Value) ->
  gen_server:cast(?CACHE_SRV, {put, Cache, Key, Value}).

%%--------------------------------------------------------------------------------------------------
%% Put Key/Value with TTL
%%--------------------------------------------------------------------------------------------------
put(Cache, Key, Value, TTL) when is_integer(TTL) ->
  gen_server:cast(?CACHE_SRV, {put, Cache, Key, Value, TTL}).

%%--------------------------------------------------------------------------------------------------
%% Get cache key value
%%--------------------------------------------------------------------------------------------------
get(Cache, Key) ->
  gen_server:call(?CACHE_SRV, {get, Cache, Key}).

%%--------------------------------------------------------------------------------------------------
%% Get cache value with cache miss function
%%--------------------------------------------------------------------------------------------------
get(Cache, Key, ValueFn) ->
  gen_server:call(?CACHE_SRV, {get, Cache, Key, ValueFn}).

%%--------------------------------------------------------------------------------------------------
%% Get cache key value and refresh TTL
%%--------------------------------------------------------------------------------------------------
touch(Cache, Key) ->
  gen_server:call(?CACHE_SRV, {touch, Cache, Key}).

%%--------------------------------------------------------------------------------------------------
%% Check if cache entry exists
%%--------------------------------------------------------------------------------------------------
exists(Cache, Key) ->
  gen_server:call(?CACHE_SRV, {exists, Cache, Key}).

%%--------------------------------------------------------------------------------------------------
%% Remove cache entry and return value
%%--------------------------------------------------------------------------------------------------
remove(Cache, Key) ->
  gen_server:call(?CACHE_SRV, {remove, Cache, Key}).

%%--------------------------------------------------------------------------------------------------
%% Delete cache entry
%%--------------------------------------------------------------------------------------------------
delete(Cache, Key) ->
  gen_server:cast(?CACHE_SRV, {delete, Cache, Key}).

%%==================================================================================================
%%
%% Cache Evict Functions
%%
%%==================================================================================================
evict_fn(Cache, set, EvictFn) ->
  gen_server:cast(?CACHE_SRV, {evict_fn_set, Cache, EvictFn}).

evict_fn(Cache, remove) ->
  gen_server:cast(?CACHE_SRV, {evict_fn_remove, Cache}).

%%==================================================================================================
%%
%% Cache Transforms
%%
%%==================================================================================================
%%--------------------------------------------------------------------------------------------------
%% Perform function on each cache entry
%%--------------------------------------------------------------------------------------------------
foreach(Cache, KVFun) ->
  gen_server:cast(?CACHE_SRV, {foreach, Cache, KVFun}).

%%--------------------------------------------------------------------------------------------------
%% Return list of function run on each cache entry
%%--------------------------------------------------------------------------------------------------
map(Cache, KVFun) ->
  gen_server:call(?CACHE_SRV, {map, Cache, KVFun}).

%%--------------------------------------------------------------------------------------------------
%% Return list of Key / Value entries that match patterns
%%--------------------------------------------------------------------------------------------------
match(Cache, KeyPattern, ValuePattern) ->
  gen_server:call(?CACHE_SRV, {match, Cache, KeyPattern, ValuePattern}).

%%--------------------------------------------------------------------------------------------------
%% Return list of entries that KVFun returns true
%%--------------------------------------------------------------------------------------------------
filter(Cache, KVFun) ->
  gen_server:call(?CACHE_SRV, {filter, Cache, KVFun}).

%%--------------------------------------------------------------------------------------------------
%% Return count of entries that KVFun returns true
%%--------------------------------------------------------------------------------------------------
count(Cache, KVFun) ->
  gen_server:call(?CACHE_SRV, {count, Cache, KVFun}).

%%--------------------------------------------------------------------------------------------------
%% Return list of all cache entries
%%--------------------------------------------------------------------------------------------------
dump(Cache) ->
  gen_server:call(?CACHE_SRV, {dump, Cache}).
